# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.source.js':
  'NetSuite Sublist For Loop':
    'prefix':'for(var line = 1; line <= lineItemCount; line++)'
    'body':"for(var line = 1; line <= lineItemCount; line++) {$1}"

  'NetSuite Search':
    'prefix':'search'
    'description': 'Load the search module to create and run on demand or saved searches and analyze and iterate through the search results. You can search for a single record by keywords, create saved searches, search for duplicate records, or return a set of records that match filters you define.'
    'rightLabelHTML': '<span style="color:#EF490F">3EN - Netsuite</span>'
    'descriptionMoreURL': 'https://system.netsuite.com/app/help/helpcenter.nl?fid=section_4345764122.html'
    'body':"""
             const $1 = search.create({
               type: $2,
                filters: [{
                  name: '$3',
                  operator: '$4'
                }],
                columns: [$5]
               });

              $1.run().each(($6) => {
                $7
                return true;
              });
           """

  'NetSuite Define':
    'prefix':'define'
    'description': 'The define Function is a global object that implements a define() Module Loader interface for SuiteScript 2.0. It conforms to the Asynchronous Module Definition (AMD) specification.'
    'rightLabelHTML': '<span style="color:#EF490F">3EN - Netsuite</span>'
    'descriptionMoreURL': 'https://system.netsuite.com/app/help/helpcenter.nl?fid=section_4387811519.html'
    'body':"""
             /**
              * @NApiVersion 2.x
              * @NModuleScope Public
              * 3EN Cloud Ltd.
              * @module $1
              * @description $2
              */
             define([$3], ($4) => {

               return /** @alias module:$1 */ {
                 $5
               };
             });
           """

  'NetSuite Restlet':
    'prefix':'restlet'
    'description': 'A RESTlet is a SuiteScript that you make available for other applications to call, either from an external application or from within NetSuite. When an application or another script calls a RESTlet, the RESTlet script executes and, in some cases, returns a value to the calling application.'
    'rightLabelHTML': '<span style="color:#EF490F">3EN - Netsuite</span>'
    'descriptionMoreURL': 'https://system.netsuite.com/app/help/helpcenter.nl?fid=section_4387799403.html'
    'body':"""
            /**
             * @NApiVersion 2.x
             * @NScriptType restlet
             * @NAmdConfig ../unio-config.json
             * 3EN Cloud Ltd.
             * @module $1
             * @description $2
             */
             define([$3], ($4) => {

              /**
               * @function get
               * @description description
               *
               * @public
               * @param  {type} - description
               * @return {type} - description
               */
              function get($5) {

              }

              /**
               * @function delete
               * @description description
               *
               * @public
               * @param  {type} - description
               * @return {type} - description
               */
              function delete($6) {

              }

              /**
               * @function put
               * @description description
               *
               * @public
               * @param  {type} - description
               * @return {type} - description
               */
              function put($7) {

              }

              /**
               * @function post
               * @description description
               *
               * @public
               * @param  {type} - description
               * @return {type} - description
               */
              function post($8) {

              }

               return /** @alias module:$1 */ {
                 get,
                 delete,
                 put,
                 post
               };
             });
           """

  'NetSuite User Event':
    'prefix':'userEvent'
    'description': 'User event scripts are executed on the NetSuite server. They are executed when users perform certain actions on records, such as create, load, update, copy, delete, or submit. Most standard NetSuite records and custom record types support user event scripts.'
    'rightLabelHTML': '<span style="color:#EF490F">3EN - Netsuite</span>'
    'descriptionMoreURL': 'https://system.netsuite.com/app/help/helpcenter.nl?fid=section_4387799721.html'
    'body':"""
             /**
              * @NApiVersion 2.x
              * @NScriptType UserEventScript
              * @NModuleScope Public
              * 3EN Cloud Ltd.
              * @module $1
              * @description $2
              */
             define([$3], ($4) => {

               /**
                * @function afterSubmit
                * @description description
                *
                * @public
                * @param  {type} scriptContext description
                * @return {type} - description
                */
               function afterSubmit(scriptContext) {

               }

                /**
                 * @function beforeLoad
                 * @description description
                 *
                 * @public
                 * @param  {type} scriptContext description
                 * @return {type} - description
                 */
                function beforeLoad(scriptContext) {

                }

                /**
                 * @function beforeSubmit
                 * @description description
                 *
                 * @public
                 * @param  {type} scriptContext description
                 * @return {type} - description
                 */
                function beforeSubmit(scriptContext) {

                }

               return /** @alias module:$1 */ {
                 afterSubmit,
                 beforeLoad,
                 beforeSubmit
               };
             });
           """

  'NetSuite Bundle Installation Script':
    'prefix':'bundleInstallationScript'
    'description': 'Bundle installation scripts are specialized server scripts that perform processes in target accounts as part of a bundle installation, update, or uninstall. These processes include setup, configuration, and data management tasks that would otherwise have to be completed by account administrators.
                    Every bundle can include a bundle installation script that is automatically run when the bundle is installed, upgraded, or uninstalled. Each bundle installation script can contain triggers to be executed before install, after install, before update, after update, and after uninstall.'
    'rightLabelHTML': '<span style="color:#EF490F">3EN - Netsuite</span>'
    'descriptionMoreURL': 'https://system.netsuite.com/app/help/helpcenter.nl?fid=section_4460460309.html'
    'body':"""
             /**
              * @NApiVersion 2.x
              * @NModuleScope Public
              * @NScriptType BundleInstallationScript
              * 3EN Cloud Ltd.
              * @module $1
              * @description $2
              */
             define([$3], ($4) => {

                /**
                 * @function afterInstall
                 * @description description
                 *
                 * @public
                 * @param  {type} toversion description
                 * @return {type} - description
                 */
                function afterInstall(toversion) {

                }

                /**
                 * @function afterUpdate
                 * @description description
                 *
                 * @public
                 * @param  {type} fromversion description
                 * @param  {type} toversion description
                 * @return {type} - description
                 */
                function afterUpdate(fromversion, toversion) {

                }

                /**
                 * @function beforeInstall
                 * @description description
                 *
                 * @public
                 * @param  {type} toversion description
                 * @return {type} - description
                 */
                function beforeInstall(toversion) {

                }

                /**
                 * @function beforeUninstall
                 * @description description
                 *
                 * @public
                 * @param  {type} toversion description
                 * @return {type} - description
                 */
                function beforeUninstall(toversion) {

                }

                /**
                 * @function beforeUpdate
                 * @description description
                 *
                 * @public
                 * @param  {type} fromversion description
                 * @param  {type} toversion description
                 * @return {type} - description
                 */
                function beforeUpdate(fromversion, toversion) {

                }

               return /** @alias module:$1 */ {
                 afterInstall,
                 afterUpdate,
                 beforeInstall,
                 beforeUninstall,
                 beforeUpdate
               };
             });
           """
